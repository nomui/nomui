.nom-input-focus(@color: @input-border-focus) {
  @color-rgba: rgba(red(@color), green(@color), blue(@color), 0.6);

  &:focus {
    border-color: @color;
    outline: 0;
  }
}

.nom-input {
  display: block;
  width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-y-base @padding-x-base;
  color: @input-color;
  font-size: @font-size-base;
  line-height: @line-height-base;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  // Customize the `:focus` state to imitate native WebKit styles.
  .nom-input-focus();

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: @input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }

  // Reset height for `textarea`s
  textarea & {
    height: auto;
  }

  .s-invalid > & {
    color: #000;
    background-color: #fff3f3;
    border-color: #ffa8a8;
  }
}

.nom-textbox {
  > .nom-field-content {
    .nom-control {
      position: relative;
    }
  }

  &.p-with-button {
    > .nom-field-content {
      > .nom-control {
        display: flex;

        > .nom-input {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
        }

        > .nom-textbox-button {
          border-left: transparent;
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }
      }
    }
  }

  &.nom-textbox-affix-wrapper {
    .nom-input-affix {
      flex: none;
    }
    .nom-input-prefix,
    .nom-textbox-left-icon {
      margin-right: 4px;
    }
    .nom-input-suffix,
    .nom-textbox-right-icon {
      margin-left: 4px;
    }
    > .nom-field-content {
      .nom-control {
        display: flex;
        align-items: center;
        border: 1px solid @input-border;
        padding: 0 @padding-x-base;
        .nom-input {
          padding: 0;
          border: none;
          outline: none;
        }
      }
    }
  }

  .nom-textbox-left-icon,
  .nom-textbox-right-icon {
    color: #a4a2bb;
  }
}

.nom-time-picker,
.nom-date-picker {
  .nom-input[readonly]:not([disabled]) {
    background-color: transparent;
  }
}

.nom-time-picker,
.nom-date-picker {
  .nom-input[readonly]:not([disabled]) {
    background-color: transparent;
  }
}
